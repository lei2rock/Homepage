name: Deployment

on:
  push:
    braches: [src] # only push events on source branch trigger deployment

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
          submodules: true

#    - name: Setup Node.js for use with actions
#      uses: actions/setup-node@v1.1.0
#      with:
#          node-version: "10.x"

    - name: Fix Wrong Update Time
      run: |
        git config core.quotepath false
        git ls-files | while read file
        do touch -d "$(git log -1 --format="@%ct" "$file")" "$file"
        done

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get Yarn Cache Directory
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache Yarn
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: |
        export PATH="$PATH:$(yarn global bin)"
        yarn global add hexo-cli
        yarn install

    - name: Generate Static Files
      run: |
        yarn build 

    - name: Setup OSS Util
      uses: manyuanrong/setup-ossutil@v1.0
      with:
        endpoint: "oss-cn-hongkong.aliyuncs.com"
        access-key-id: "${{ secrets.OSS_KEY_ID }}"
        access-key-secret: "${{ secrets.OSS_KEY_SECRET }}"

    - name: Clean Bucket
      run: ossutil rm oss://dlzhang/ -rf

    - name: Deploy to OSS
      run: ossutil cp public/ oss://dlzhang/ -rf

    - name: Deploy to Github for Backup
      env:
        GIT_NAME: lei2rock
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        REPO: github.com/lei2rock/homepage
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        cd ./public && git init && git add .
        git config --global user.name $GIT_NAME
        git config --global user.email $GIT_EMAIL
        git commit -m "Site deployed by GitHub Actions"
        git push --force --quiet "https://${GH_TOKEN}@${REPO}" master:master

    - name: Telegram Notification
      if: cancelled() == false
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.TG_BOT_TOKEN }}
        chatId: ${{ secrets.TG_CHAT_ID }}
        jobStatus: ${{ job.status }}
        skipSuccess: false
