name: Deployment

on:
  push:
    branches: [master] # only push events on source branch trigger deployment

jobs:
  hexo-deployment:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Yarn install cache
      uses: c-hive/gha-yarn-cache@v1

    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Get coscmd requirements
      run: wget https://raw.githubusercontent.com/tencentyun/coscmd/master/requirements.txt

    - name: Pip cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies & Generate static files
      run: |
        node -v
        export PATH="$PATH:$(yarn global bin)"
        yarn global add hexo-cli
        yarn install
        sed -i '26s/imageLink/imageLink.replace(\/\![0-9]{3,}x\/,"")/' node_modules/hexo-theme-next/source/js/utils.js
        yarn build
        sed -i 's/<title>| Zhang/<title>Zhang/' public/index.html

    - name: Setup coscmd
      env:
        SECRET_ID: ${{ secrets.COS_SECRET_ID }}
        SECRET_KEY: ${{ secrets.COS_SECRET_KEY }}
        BUCKET: ${{ secrets.COS_BUCKET }} #bucket name with qcloud_user_id
        REGION: ${{ secrets.COS_REGION }} #eg. ap-shanghai
      run: |
        pip install -U coscmd
        coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION -m 30

    - name: Deploy assets to cos
      run: |
        coscmd upload -rs --delete public/css assets/css-homepage -f
        rm -rf public/css public/js public/images

    - name: Deploy to server
      uses: easingthemes/ssh-deploy@v2.1.2
      env:
        ARGS: "-avz --delete"
        SOURCE: "public/"
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}

    - name: Telegram notification
      if: cancelled() == false
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.TG_BOT_TOKEN }} #use bot @BotFather
        chatId: ${{ secrets.TG_CHAT_ID }} #use bot @userinfobot
        jobStatus: ${{ job.status }}
        skipSuccess: false