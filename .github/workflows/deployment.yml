name: Deployment

on:
  push:
    braches: [src] # only push events on source branch trigger deployment

jobs:
  hexo-deployment:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai

    steps:
    - name: Checkout Source
      uses: actions/checkout@v1
      with:
          submodules: true

    - name: Setup Node.js
      uses: actions/setup-node@v1.1.0
      with:
          node-version: '12.x'

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

#    - name: Fix Wrong Update Time
#      run: |
#        find source/_posts -name '*.md' | while read file
#        do touch -d "$(git log -1 --format="@%ct" "$file")" "$file"
#        done

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get Yarn Cache Directory
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Get Python Cache Directory
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Cache Python
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies & Generate Static Files
      run: |
        export PATH="$PATH:$(yarn global bin)"
        yarn global add hexo-cli
        yarn install
        sed -i '18s/imageLink/imageLink.replace(\/\![0-9]{3,}x\/,"")/' themes/next/source/js/utils.js
        yarn build

    - name: Setup Tencent COSCMD
      env:
        SECRET_ID: ${{ secrets.COS_SECRET_ID }}
        SECRET_KEY: ${{ secrets.COS_SECRET_KEY }}
        BUCKET: ${{ secrets.COS_BUCKET }} #bucket name with qcloud_user_id
        REGION: ${{ secrets.COS_REGION }} #with `ap-`
      run: |
        pip install -U coscmd
        coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION -m 30

    - name: Deploy css js images to COS
      run: |
        coscmd upload -rs --delete public/css assets/homepage-css
#        coscmd upload -rs --delete public/js assets/js
#        coscmd upload -rs --delete source/images assets/img

    - name: Setup Aliyun OSS Util
      uses: manyuanrong/setup-ossutil@v1.0
      with:
        endpoint: oss-cn-hongkong.aliyuncs.com
        access-key-id: ${{ secrets.OSS_KEY_ID }}
        access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

    - name: Deploy html to OSS
      env:
        OSS_BUCKET: ${{ secrets.OSS_BUCKET }} #bucket name without endpoint domain
      run: |
        rm -rf public/css/ public/js/ public/images/ public/index/
        ossutil rm oss://$OSS_BUCKET/ -rf
        ossutil cp public/ oss://$OSS_BUCKET/ -rf

#    - name: Deploy to Github for Backup
#      env:
#        GIT_NAME: lei2rock
#        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
#        REPO: github.com/lei2rock/homepage
#        GH_TOKEN: ${{ secrets.GH_TOKEN }}
#      run: |
#        cd ./public && git init && git add .
#        git config --global user.name $GIT_NAME
#        git config --global user.email $GIT_EMAIL
#        git commit -m "Site deployed by GitHub Actions"
#        git push --force --quiet "https://$GH_TOKEN@$REPO" master:master

    - name: Telegram Notification
      if: cancelled() == false
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.TG_BOT_TOKEN }} #use telegram bot @BotFather
        chatId: ${{ secrets.TG_CHAT_ID }} #use telegram bot @userinfobot
        jobStatus: ${{ job.status }}
        skipSuccess: false
